# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: intelligence_service.proto
# plugin: python-betterproto
from dataclasses import dataclass

import betterproto
import grpclib


@dataclass
class StartTrackingNewChannelRequest(betterproto.Message):
    channel_id: int = betterproto.int64_field(1)


@dataclass
class StartTrackingNewChannelResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    message: str = betterproto.string_field(2)


@dataclass
class RevisitChannelRequest(betterproto.Message):
    channel_id: int = betterproto.int64_field(1)


@dataclass
class RevisitChannelResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    message: str = betterproto.string_field(2)


@dataclass
class GetChannelIdByUsernameRequest(betterproto.Message):
    channel_username: str = betterproto.string_field(1)


@dataclass
class GetChannelIdByUsernameResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    message: str = betterproto.string_field(2)


class ChannelIntelligenceStub(betterproto.ServiceStub):
    async def start_tracking_new_channel(
        self, *, channel_id: int = 0
    ) -> StartTrackingNewChannelResponse:
        """Channel collection"""

        request = StartTrackingNewChannelRequest()
        request.channel_id = channel_id

        return await self._unary_unary(
            "/channel_intelligence.ChannelIntelligence/StartTrackingNewChannel",
            request,
            StartTrackingNewChannelResponse,
        )

    async def revisit_channel(self, *, channel_id: int = 0) -> RevisitChannelResponse:
        request = RevisitChannelRequest()
        request.channel_id = channel_id

        return await self._unary_unary(
            "/channel_intelligence.ChannelIntelligence/RevisitChannel",
            request,
            RevisitChannelResponse,
        )

    async def get_channel_id_by_username(
        self, *, channel_username: str = ""
    ) -> GetChannelIdByUsernameResponse:
        request = GetChannelIdByUsernameRequest()
        request.channel_username = channel_username

        return await self._unary_unary(
            "/channel_intelligence.ChannelIntelligence/GetChannelIdByUsername",
            request,
            GetChannelIdByUsernameResponse,
        )
